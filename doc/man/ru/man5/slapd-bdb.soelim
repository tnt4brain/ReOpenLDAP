.\" $ReOpenLDAP$
.\" Copyright 1992-2018 ReOpenLDAP AUTHORS: please see AUTHORS file.
.\" All rights reserved.
.\"
.\" This file is part of ReOpenLDAP.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted only as authorized by the OpenLDAP
.\" Public License.
.\"
.\" A copy of this license is available in the file LICENSE in the
.\" top-level directory of the distribution or, alternatively, at
.\" <http://www.OpenLDAP.org/license.html>.

.TH SLAPD-BDB 5 "@RELEASE_DATE@" "ReOpenLDAP @VERSION@"

.SH НАЗВАНИЕ
slapd\-bdb, slapd\-hdb \- устаревшие механизмы манипуляции данными для slapd Berkeley DB.

.SH ОБЗОР
.B @SYSCONFDIR@/slapd.conf

.SH ОПИСАНИЕ
Механизм манипуляции данными для
.BR slapd (8)
\fBbdb\fP использует для хранения данных устаревший пакет Oracle Berkeley DB (BDB).
Для ускорения доступа к данным он широко использует индексацию и кэширование.
.LP
Имейте ввиду, что механизм BDB является устаревшим, и в будущих выпусках ReOpenLDAP его поддержка
будет прекращена. Вместо него следует использовать \fBmdb\fP.
.LP
\fBhdb\fP - это вариант механизма \fBbdb\fP, использующий иерархическую модель базы данных, поддерживающую
переименование поддеревьев. Он эффективнее механизма \fBbdb\fP как с точки зрения потребления
дискового пространства, так и по рабочим характеристикам. Во всём остальном его поведение
идентично поведению \fBbdb\fP, и в настройке применяются все те же параметры.
.LP
Следует отметить, что эти параметры призваны дополнять параметры конфигурации Berkeley DB,
задаваемые в файле
.B DB_CONFIG
в окружении базы данных. Подробное описание параметров конфигурации
.B DB_CONFIG
можно найти в документации Berkeley DB. Там, где настройки перекрывают друг друга,
приоритет имеют установки в файле
.BR DB_CONFIG .
.SH КОНФИГУРАЦИЯ
Приведённые ниже директивы
.B slapd.conf
применяются к базам данных механизмов манипуляции данными \fBbdb\fP и \fBhdb\fP. То есть они должны
следовать за строками "database bdb" или "database hdb" и находиться до последующих строк "backend"
или "database". Другие относящиеся к базам данных директивы описаны в man-странице
.BR slapd.conf (5).
.TP
.BI cachesize \ <integer>
Указывает размер (в количестве записей) поддерживаемого экземпляром базы данных механизма манипуляции
данными \fBbdb\fP или \fBhdb\fP кэша записей в оперативной памяти. Значение по умолчанию - 1000 записей.
.TP
.BI cachefree \ <integer>
Указывает, какое количество записей нужно высвободить из кэша записей, когда его размер достигает
ограничения \fBcachesize\fP. Значение по умолчанию - 1 запись.
.TP
.BI checkpoint \ <kbyte>\ <min>
Указывает периодичность сброса журнала транзакций базы данных. Операция сброса в контрольной точке
выгружает буферы базы данных на диск и записывает информацию о контрольной точке в журнал. Выгрузка
данных произойдёт либо при записи данных размером \fI<kbyte>\fP Кбайт, либо по прошествии \fI<min>\fP
минут с момента последней выгрузки. По умолчанию оба аргумента установлены в ноль, в этом случае они
игнорируются. Если аргумент \fI<min>\fP отличен от нуля, каждые \fI<min>\fP минут будет запускаться
внутренняя задача по выгрузке данных. Более подробную информацию о сбросе в контрольных точках
смотрите в руководстве по Berkeley DB.
.TP
.B checksum
Включает проверку контрольной суммы страниц базы данных при их чтении с диска.
Эту настройку можно задать только перед тем, как будут созданы какие-либо файлы базы данных.
.TP
.BI cryptfile \ <file>
Указывает путь к файлу, содержащему ключ шифрования, который будет использован для шифрования базы данных.
Шифрование выполняется с использованием Berkeley DB-реализации AES. Имейте ввиду, что шифрование
может быть настроено только перед тем, как будут созданы какие-либо файлы базы данных, а изменение ключа
может быть осуществлено только после удаления текущей базы данных и повторного её создания.
По умолчанию шифрование не включено, и некоторые дистрибутивы Berkeley DB не поддерживают шифрование.
.TP
.BI cryptkey \ <key>
Указывает ключ шифрования, который будет использован для шифрования базы данных.
Эту директиву можно использовать, если создавать отдельный файл
.I cryptfile
нежелательно. Может быть указана только одна из директив
.B cryptkey
и
.BR cryptfile .
.TP
.BI dbconfig \ <Berkeley-DB-setting>
Указывает директиву конфигурации, которая будет помещена в файл
.B DB_CONFIG
в директории базы данных. Директива
.B dbconfig
- это просто удобный способ, позволяющий задавать все необходимые настройки в файле
.BR slapd.conf .
Параметры конфигурации Berkeley DB, задаваемые с помощью этой директивы, будут записаны в файл
.B DB_CONFIG
только если во время запуска сервера этого файла не существует, в противном случае они будут
полностью проигнорированы. Это позволяет задать первоначальные установки, при этом, если файл
.B DB_CONFIG
уже был настроен другими средствами, все настройки в нём не будут переопределены или сброшены.
Эту директиву можно задавать несколько раз по мере необходимости, например:
.RS
.nf
	dbconfig set_cachesize 0 1048576 0
	dbconfig set_lg_bsize 2097152
.fi
.RE
.TP
.B dbnosync
Указывает, что содержимое базы данных на диске не должно немедленно синхронизироваться при изменении
содержимого базы данных в памяти. Включение этой опции может повысить производительность за счёт
увеличения риска потери данных. Более подробную информацию смотрите в руководстве по Berkeley DB.
.TP
\fBdbpagesize \fR \fI<dbfile> <size>\fR
Указывает, какой размер страницы использовать для конкретных файлов базы данных. Размер указывается
в единицах, равных 1024 байта. Значение по умолчанию для файла
.B id2entry
- 16, для всех остальных файлов значение по умолчанию зависит от размера блока файловой системы, в
которой располагается база данных (обычно 4 или 8). Максимальный размер, поддерживаемый BerkeleyDB
- 64. Обычно этот параметр изменять не следует, но если утилита BerkeleyDB "db_stat \-d" показывает,
что в файле появляется большое количество переполненных страниц, установка большего размера страницы
может повысить производительность за счёт возможной потери целостности данных. Эта настройка
срабатывает только при создании файлов базы данных. Более подробную информацию смотрите в
руководстве по Berkeley DB.
.TP
.BI directory \ <directory>
Указывает директорию, где находятся BDB-файлы, содержащие эту базу данных и ассоциированные с ней
индексы. Для каждой базы данных должна быть определена отдельная директория. По умолчанию -
.BR @LOCALSTATEDIR@/reopenldap\-data .
.TP
.B dirtyread
Позволяет считывать модифицированные данные, фиксация изменений которых ещё не произошла. Обычно
транзакции изолируются для предотвращения доступа других операций к незафиксированным данным.
Этот параметр может повысить производительность, но может также привести к возврату противоречивых
результатов, если данные поступили из транзакции, которая позже была отклонена. В этом случае
модифицированные данные вернутся в исходное состояние и последующий поисковый запрос вернёт другой
результат.
.TP
.BI dncachesize \ <integer>
Указывает максимальное количество DN в кэше DN в оперативной памяти. В идеальном случае этот кэш
должен быть настолько велик, чтобы вместить DN всех записей в базе данных. Если размер кэша DN задан
меньше, чем значение \fBcachesize\fP, то он будет негласно увеличен до размера \fBcachesize\fP.
Значение по умолчанию - 0, что означает отсутствие ограничений, то есть кэш DN может разрастаться
до любого требуемого размера.

Следует отметить, что \fBкэш DN\fP может временно
превышать настроенный размер. Это происходит в случае, когда при попытке освобождения кэша большое
количество записей являются заблокированными (из-за того, что в настоящее время они используются в
запросах). Кроме того, из \fBкэша DN\fP никогда не удаляются записи, дочерние записи которых закэшированы,
поэтому, в зависимости от структуры DIT, может быть закэшировано множество DN сверх установленного лимита.
.TP
.BI idlcachesize \ <integer>
Указывает размер (в слотах индексов) кэша индексов в оперативной памяти. Значение по умолчанию - ноль.
Чем больше это значение, тем больше скорость выполнения часто производимых поисковых запросов, в которых
анализируются проиндексированные записи. В базах данных \fBhdb\fP для обеспечения хорошей
производительности поиска требуется большое значение \fBidlcachesize\fP, обычно в три раза превышающее значение
.B cachesize
(размер кэша записей) или даже больше.
.TP
\fBindex \fR{\fI<attrlist>\fR|\fBdefault\fR} [\fBpres\fR,\fBeq\fR,\fBapprox\fR,\fBsub\fR,\fI<special>\fR]
Указывает индексы, которые поддерживаются для указанного атрибута (или списка атрибутов).
Некоторые атрибуты поддерживают не все индексы.
Если задан только список атрибутов \fI<attrlist>\fP, для этих атрибутов будут поддерживаться индексы,
указанные как индексы по умолчанию \fBdefault\fR. Обратите внимание, что задание индексов по умолчанию
не подразумевает, что будут проиндексированы все атрибуты. Кроме того, для лучшей производительности, для атрибута
.B objectClass
следует всегда настраивать индекс
.BR eq .

Может быть указано несколько специальных параметров индексирования. Тип индекса
.B sub
может быть представлен как три отдельных типа
.BR subinitial ,
.B subany
и
.BR subfinal .
Для запрета использования определяемого индекса для языковых подтипов может быть указан специальный тип
.BR nolang .
Для запрета использования определяемого индекса для именованных подтипов может быть указан специальный тип
.BR nosubtypes .
Примечание: при изменении установок \fBindex\fP в
.BR slapd.conf (5)
требуется повторное построение индексов, смотрите
.BR slapindex (8);
динамическое изменение установок \fBindex\fP путём выполнения операций LDAPModifying над "cn=config"
приводит к автоматическому онлайн-перепостроению индексов в фоновом режиме.
.TP
.B linearindex
Указывает
.B slapindex
индексировать по одному атрибуту за один проход. По умолчанию за один проход обрабатываются все
индексируемые атрибуты одной записи. При установке этого параметра каждый индексируемый атрибут
обрабатывается отдельно, и для выполнения индексации используется несколько проходов по всей
базе данных. Этот параметр повышает производительность
.BR slapindex ,
когда размер базы данных превышает размер \fBdbcache\fP. Если размер \fBdbcache\fP достаточно велик,
устанавливать этот параметр не следует, поскольку это снизит производительность. Кроме того, по умолчанию
.B slapadd
выполняет полное индексирование и потому не требуется отдельно запускать
.BR slapindex .
С данным параметром
.B slapadd
не будет выполнять индексирование, и запуск
.B slapindex
необходим.
.TP
.BR lockdetect \ { oldest | youngest | fewest | random | default }
Указывает, какую транзакцию следует прекратить при выявлении взаимной блокировки (deadlock).
Значение по умолчанию -
.BR random .
.TP
.BI mode \ <integer>
Указывает режим защиты файлов, которые будут иметь вновь созданные файлы индексов базы данных.
Значение по умолчанию - 0600.
.TP
.BI searchstack \ <depth>
Указывает глубину стека, используемого для оценки поискового фильтра. Оценка поисковых фильтров
происходит по стеку, в который помещаются вложенные условия AND / OR. Для каждого потока сервера
выделяется собственный стек. Глубина стека определяет, насколько комплексные фильтры могут быть
оценены без необходимости выделения дополнительной памяти. Применение поискового фильтра с глубиной
вложенности большей, чем глубина поискового стека, приведёт к тому, что для этой конкретной
операции поиска будет выделен отдельный стек. Подобное выделение может привести к значительному
падению производительности, однако определение слишком большого стека также приведёт к потреблению
значительного объема памяти. Каждый поисковый стек использует 512Kb для одного вложенного уровня
условий. Глубина стека по умолчанию - 16, то есть используется 8Mb памяти для каждого потока.
.TP
.BI shm_key \ <integer>
Указывает ключ для окружения BDB в разделяемой памяти. По умолчанию окружение BDB использует
отображаемые в памяти файлы. Если в параметре указано значение, отличное от нуля, оно будет
использовано в качестве ключа, идентифицирующего регион разделяемой памяти, в котором будет
располагаться окружение.
.SH КОНТРОЛЬ ДОСТУПА
Механизмы манипуляции данными
.B bdb
и
.B hdb
соблюдают указанные в
.BR slapd.access (5)
семантики контроля доступа.
.SH ФАЙЛЫ
.TP
.B @SYSCONFDIR@/slapd.conf
конфигурационный файл
.B slapd
по умолчанию
.TP
.B DB_CONFIG
конфигурационный файл Berkeley DB.
.SH СМОТРИТЕ ТАКЖЕ
.BR slapd.conf (5),
.BR slapd\-config (5),
.BR slapd\-mdb (5),
.BR slapd (8),
.BR slapadd (8),
.BR slapcat (8),
.BR slapindex (8),
документацию Berkeley DB.
.SH "ПРИЗНАНИЕ ЗАСЛУГ"
.so ../Project
Разработку механизма манипуляции данными начал Kurt Zeilenga. Механизмы кэширования первоначально
разработал Jong-Hyuk Choi. Завершение работ и последующие доработки, а также механизм back-hdb -
Howard Chu.
