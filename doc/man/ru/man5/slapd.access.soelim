.\" $ReOpenLDAP$
.\" Copyright 1992-2018 ReOpenLDAP AUTHORS: please see AUTHORS file.
.\" All rights reserved.
.\"
.\" This file is part of ReOpenLDAP.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted only as authorized by the OpenLDAP
.\" Public License.
.\"
.\" A copy of this license is available in the file LICENSE in the
.\" top-level directory of the distribution or, alternatively, at
.\" <http://www.OpenLDAP.org/license.html>.

.TH SLAPD.ACCESS 5 "@RELEASE_DATE@" "ReOpenLDAP @VERSION@"

.SH НАЗВАНИЕ
slapd.access \- конфигурация доступа для slapd, автономного демона LDAP

.SH СИНТАКСИС
@SYSCONFDIR@/slapd.conf

.SH ОПИСАНИЕ
Файл
.BR slapd.conf (5)
содержит конфигурационную информацию для демона
.BR slapd (8).
Этот конфигурационный файл также используется инструментами SLAPD:
.BR slapacl (8),
.BR slapadd (8),
.BR slapauth (8),
.BR slapcat (8),
.BR slapdn (8),
.BR slapindex (8)
и
.BR slaptest (8).
.LP
Файл
.B slapd.conf
состоит из набора глобальных параметров конфигурации, применяемых к
.B slapd
в целом (в том числе ко всем механизмам манипуляции данными), за которыми следует ноль или более определений
баз данных какого-либо механизма манипуляции данными. В этих определениях содержится информация,
специфичная для конкретной базы данных конкретного механизма манипуляции данными.
.LP
Общий формат
.BR slapd.conf :
.LP
.nf
    # комментарий - данные параметры применяются к каждой базе данных
    <глобальные параметры конфигурации>
    # определение и параметры конфигурации первой базы данных
    database    <первый тип механизма манипуляции данными>
    <параметры конфигурации, специфичные для механизма первого типа>
    # последующие определения и параметры конфигурации баз данных
    ...
.fi
.LP
Как раздел глобальных настроек, так и каждый из разделов баз данных механизмов манипуляции
данными могут содержать информацию по контролю доступа.
Директивы контроля доступа из раздела, специфичного для базы данных какого-либо механизма манипуляции данными,
используются для записей, относящихся к этой базе в соответствии с контекстом их именования.
В случае, когда для какой-либо базы данных не определено директив контроля доступа, либо те,
которые определены, являются неприменимыми, используются директивы из раздела глобальных настроек.
.LP
Если отсутствуют какие-либо настройки контроля доступа, политика по умолчанию разрешает
кому бы то ни было (всем) читать что угодно, а вносить изменения разрешено только rootdn
(то есть, "access to * by * read").
.LP
При обработке списков доступа директивы из глобального списка добавляются в конец списка каждой базы данных.
Если полученный в результате список не пуст, то к нему неявно добавляется директива
.BR "access to * by * none" .
Если же применимых к механизму манипуляции данными директив доступа не оказалось,
то по умолчанию используется доступ на чтение.
.LP
.B Предупреждение: rootdn всегда может читать и записывать ВСЁ!
.LP
Для записей, не входящих в базу данных какого-либо механизма манипуляции данными (таких как root DSE),
используются глобальные директивы.
.LP
Аргументы, которые необходимо заменить актуальным текстом, показаны в угловых скобках <>.
.SH ДИРЕКТИВА ACCESS
Структура директивы контроля доступа:
.TP
.B access to <what> "[ by <who> [ <access> ] [ <control> ] ]+"
Предоставляется доступ (указанный как
.BR <access> )
к набору записей и/или атрибутов (указанных как
.BR <what> )
одному или более запрашивающих доступ (указанных как
.BR <who> ).

.LP
Список директив access оценивается в порядке их определения в \fIslapd.conf\fP.
При совпадении условия
.B <what>
с элементом данных, доступ к которому в текущий момент оценивается, проверяется список условий
.B <who>
этой директивы. При совпадении условия
.B <who>
с характеристиками того, кто хочет получить доступ, оцениваются условия
.B <access>
и
.B <control>
этой директивы. Контроль доступа прекращается при первом совпадении условий
.B <what>
и
.BR <who> ,
если иное не задано условием
.BR <control> .
Каждый список условий
.B <who>
неявно завершается условием
.LP
.nf
	by * none stop
.fi
.LP
в результате чего контроль доступа прекращается без предоставления привилегий доступа.
Каждый список условий
.B <what>
неявно завершается условием
.LP
.nf
	access to *
		by * none
.fi
.LP
в результате чего привилегии на доступ ко всем остальным не указанным явно элементам данных не предоставляются.
.SH ПОЛЕ <WHAT>
Поле
.BR <what>
определяет объект, к которому применяется директива контроля доступа. Оно может иметь следующие формы:
.LP
.nf
	dn[.<dnstyle>]=<dnpattern>
	filter=<ldapfilter>
	attrs=<attrlist>[ val[/matchingRule][.<attrstyle>]=<attrval>]
.fi
.LP
где
.LP
.nf
	<dnstyle>={{exact|base(object)}|regex
		|one(level)|sub(tree)|children}
	<attrlist>={<attr>|[{!|@}]<objectClass>}[,<attrlist>]
	<attrstyle>={{exact|base(object)}|regex
		|one(level)|sub(tree)|children}
.fi
.LP
Выражение
.B dn=<dnpattern>
отбирает записи на основании их контекста именования.
.BR <dnpattern> \ \-
это строковое представление DN записи.
Шаблон
.B *
соответствует всем записям, он неявно подразумевается, если никакая из форм
.B dn
не предоставлена.
.LP
Указание
.B <dnstyle>
необязательно; тем не менее, рекомендуется указывать его во избежание неоднозначностей.
Значение по умолчанию -
.B base
(синоним
.BR baseObject ),
или
.B exact
(псевдоним для
.BR base ),
указывает на запись, DN которой совпадает с
.BR <dnpattern> ;
.B one
(синоним
.BR onelevel )
указывает на все записи, непосредственно на один уровень ниже
.BR <dnpattern> ;
.B sub
(синоним
.BR subtree )
указывает на все записи поддерева, начиная с
.BR <dnpattern> ;
.B children
указывает на все записи ниже (нижестоящие по отношению к)
.BR <dnpattern> .
.LP
Если в качестве квалификатора
.B <dnstyle>
указан
.BR regex ,
то
.B <dnpattern>
рассматривается как шаблон POSIX (''расширенного'') регулярного выражения,
как описано в
.BR regex (7)
и/или
.BR re_format (7),
соответствующего нормализованному строковому представлению DN записи.
Форма шаблона regex не поддерживает UTF-8 (пока).
.LP
Выражение
.B filter=<ldapfilter>
отбирает записи на основании корректного LDAP-фильтра, как описано в RFC 4515.
Если никакая из форм
.B filter
не предоставлена, неявно подразумевается фильтр
.BR (objectClass=*) .
.LP
Выражение
.B attrs=<attrlist>
отбирает атрибуты, к которым применяется данное правило контроля доступа.
Это разделённый запятыми список типов атрибутов, плюс специальные имена
.B entry
(указывающее на доступ к самой записи) и
.B children
(указывающее на доступ к потомкам этой записи).
В этом списке также могут быть указаны имена объектных классов,
тогда правило доступа будет распространяться на все атрибуты,
которые требуются или разрешены этими объектными классами.
В настоящее время имена в списке
.BR <attrlist> ,
перед которыми указан знак
.BR @ ,
прямо интерпретируются как имена объектных классов. Имена, перед которыми указан знак
.BR ! ,
также интерпретируются как объектные классы, но в этом случае правило доступа будет распространяться на атрибуты,
которые не требуются или не разрешены этими объектными классами.
Если никакая из форм
.B attrs
не предоставлена, неявно подразумевается
.BR attrs=@extensibleObject ,
то есть охватываются все атрибуты.
.LP
Использование формы
.B attrs=<attr> val[/matchingRule][.<attrstyle>]=<attrval>
определяет доступ к конкретному значению одного атрибута.
В этом случае может быть задан только один тип атрибута.
.B <attrstyle>
.B exact
(по умолчанию) использует для выполнения сравнения со значением правило соответствия equality атрибута,
если не указано иное (и совместимое с атрибутом) правило соответствия. Если в качестве
.B <attrstyle>
указан
.BR regex ,
предоставленное значение используется как шаблон POSIX (''расширенного'') регулярного выражения.
Если атрибут имеет синтаксис DN, то
.B <attrstyle>
может быть одним из
.BR base ,
.BR onelevel ,
.B subtree
или
.BR children ,
что означает совпадение как при поиске с диапазонами base, onelevel, subtree или children, соответственно.
.LP
Выражения dn, filter и attrs являются аддитивными; они могут использоваться последовательно
для отбора объектов, к которым применяется данное правило доступа,
на основании контекста именования, значения и типа атрибута одновременно.
На подсовпадения, получившиеся в результате совпадения с шаблоном регулярного выражения
.BR regex ,
можно сослаться в поле
.B <who>
с помощью синтаксиса
.IR ${v<n>} ,
где
.IR <n> \ \-
это номер подсовпадения. Синтаксис по умолчанию
.I $<n>
в действительности является псевдонимом для
.IR ${d<n>} ,
который соответствует подсовпадению из части
.B dnpattern
поля
.BR <what> .
.SH ПОЛЕ <WHO>
Поле
.B <who>
указывает того, к кому применяется данное правило доступа.
В директиве контроля доступа может присутствовать несколько выражений
.BR <who> ,
задающих разные привилегии доступа к одному и тому же ресурсу для разных претендентов на получение доступа.
Выражение
.B <who>
может иметь следующие формы:
.LP
.nf
	*
	anonymous
	users
	self[.<selfstyle>]

	dn[.<dnstyle>[,<modifier>]]=<DN>
	dnattr=<attrname>

	realanonymous
	realusers
	realself[.<selfstyle>]

	realdn[.<dnstyle>[,<modifier>]]=<DN>
	realdnattr=<attrname>

	group[/<objectclass>[/<attrname>]]
		[.<groupstyle>]=<group>
	peername[.<peernamestyle>]=<peername>
	sockname[.<style>]=<sockname>
	domain[.<domainstyle>[,<modifier>]]=<domain>
	sockurl[.<style>]=<sockurl>
	set[.<setstyle>]=<pattern>

	ssf=<n>
	transport_ssf=<n>
	tls_ssf=<n>
	sasl_ssf=<n>

	dynacl/<name>[/<options>][.<dynstyle>][=<pattern>]
.fi
.LP
где
.LP
.nf
	<style>={exact|regex|expand}
	<selfstyle>={level{<n>}}
	<dnstyle>={{exact|base(object)}|regex
		|one(level)|sub(tree)|children|level{<n>}}
	<groupstyle>={exact|expand}
	<peernamestyle>={<style>|ip|ipv6|path}
	<domainstyle>={exact|regex|sub(tree)}
	<setstyle>={exact|expand}
	<modifier>={expand}
	<name>=aci		<pattern>=<attrname>]
.fi
.LP
Эти формы могут задаваться в комбинации.
.LP
.nf
.fi
.LP
Шаблон
.B *
указывает на всех.
.LP
Ключевые слова с префиксом
.B real
обрабатываются также, как и соответствующие им ключевые слова без префикса;
проверке подвергаются \fIаутентификационное\fP и \fIавторизационное\fP DN, соответственно.
.LP
Ключевое слово
.B anonymous
означает, что доступ предоставляется не прошедшим проверку подлинности клиентам;
в основном оно используется для того, чтобы доступ к ресурсам аутентифкации (например, атрибуту
.BR userPassword )
предоставлялся лишь клиентам, не прошедшим проверку подлинности, в целях её прохождения ими.
.LP
Ключевое слово
.B users
означает, что доступ предоставляется клиентам, прошедшим проверку подлинности.
.LP
Ключевое слово
.B self
означает, что доступ к записи разрешается самой этой записи
(то есть, запись, к которой осуществляется доступ, и запись,
от имени которой запрашивается доступ, должны совпадать).
При этом разрешается использовать стиль
.BR level{<n>} ,
где индекс \fI<n>\fP указывает, какой предок DN должен быть использован в совпадениях.
Положительное значение индекса говорит о том, что должен рассматриваться <n>-й предок DN пользователя;
отрицательное значение индекса говорит о том, что должен рассматриваться <n>-й предок DN целевой записи.
Например, условие "\fIby self.level{1} ...\fP" сработает, когда к объекту "\fIdc=example,dc=com\fP"
осуществляется доступ пользователем "\fIcn=User,dc=example,dc=com\fP".
Условие "\fIby self.level{-1} ...\fP" сработает, когда тот же пользователь осуществляет доступ
к объекту "\fIou=Address Book,cn=User,dc=example,dc=com\fP".
.LP
Выражение
.B dn=<DN>
означает, что доступ предоставляется соответствующему DN. В необязательном квалификаторе стиля
.B dnstyle
разрешено использовать те же варианты, что и в форме dn поля
.BR <what> .
Кроме того, в стиле
.B regex
можно воспользоваться заменой подстрок подсовпадениями из условия dn.regex поля
.B <what>
путём использования формы
.BR $<digit> ,
где
.B digit
может быть от 0 до 9 (0 соответствует строке целиком), либо формы
.BR ${<digit>+} ,
для подсовпадений, номер которых превышает 9.
Может быть выполнена замена подстроки значением атрибута с помощью формы
.BR ${v<digit>+} .
Так как символ доллара используется для указания замены подстроки, символ доллара,
использующийся для указания совпадения с концом строки,
должен быть экранирован вторым символом доллара, например:
.LP
.nf
    access to dn.regex="^(.+,)?uid=([^,]+),dc=[^,]+,dc=com$"
        by dn.regex="^uid=$2,dc=[^,]+,dc=com$$" write
.fi
.LP
В квалификаторе стиля разрешено использование необязательного модификатора
.BR modifier .
В настоящее время единственным разрешённым вариантом модификатора является
.BR expand ,
указание которого приводит к тому, что замена подстрок подсовпадениями происходит даже если
.B dnstyle
не является
.BR regex .
Имейте ввиду, что dnstyle
.B regex
в приведённом выше примере целесообразно использовать, только если в условии
.B <by>
требуется применение регулярного выражения; в противном случае,
если в этом же примере значение второго (справа) вхождения
.B dc=
в DN фиксировано, может быть использована форма:
.LP
.nf
    access to dn.regex="^(.+,)?uid=([^,]+),dc=example,dc=com$"
        by dn.exact,expand="uid=$2,dc=example,dc=com" write
.fi
.LP
Если же это вхождение должно соответствовать значению в условии
.BR <what> ,
то может быть использована форма:
.LP
.nf
    access to dn.regex="^(.+,)?uid=([^,]+),dc=([^,]+),dc=com$"
        by dn.exact,expand="uid=$2,dc=$3,dc=com" write
.fi
.LP
Отличные от regex формы условия
.B <what>
могут также предоставлять подсовпадения. Формы
.BR base(object) ,
.BR sub(tree) ,
.BR one(level) ,
.B children
предоставляют подсовпадение
.BR $0 ,
совпадающее со строкой целиком.
Также формы
.BR sub(tree) ,
.BR one(level) ,
.B children
предоставляют подсовпадение
.BR $1 ,
совпадающее с самой правой частью DN, как определено в условии
.BR <what> .
Это может пригодиться, например, для предоставления доступа всем предкам пользователя:
.LP
.nf
    access to dn.subtree="dc=com"
        by dn.subtree,expand="$1" read
.fi
.LP
Здесь доступ разрешён только к записям, которые представлены в DN условия
.BR <by> .
.LP
Форма
.BR level{<n>} \ \-
это расширение и обобщение формы
.BR onelevel ,
совпадающая со всеми DN, <n>-м предком которых является указанный шаблон.
Так, \fIlevel{1}\fP - это эквивалент \fIonelevel\fP,
а \fIlevel{0}\fP - эквивалент \fIbase\fP.
.LP
Совершенно бессмысленно предоставлять любые привилегии доступа DN, полностью совпадающему с
.B rootdn
базы данных, к которой применяется этот ACL, поскольку ему неявно
предоставлены права на запись во всём дереве этой базы данных.
По сути, контроль доступа для
.B rootdn
обходится, чтобы решить пресловутую проблему курицы и яйца.
.LP
Выражение
.B dnattr=<attrname>
означает, что доступ предоставляется тем запрашивающим, чей DN перечислен в записи,
к которой осуществляется доступ, в качестве значения атрибута
.BR <attrname> .
.LP
Выражение
.B group=<group>
означает, что доступ предоставляется тем запрашивающим,
чей DN перечислен в групповой записи, DN которой задан в
.BR <group> .
Необязательные параметры
.B <objectclass>
и
.B <attrname>
определяют объектный класс групповой записи и тип атрибута членства в ней.
Значения по умолчанию -
.B groupOfNames
и
.BR member ,
соответственно.
Опциональный квалификатор стиля
.B <style>
может быть
.BR expand ,
тогда
.B <group>
будет расширен как строка замены с подстановками (но не как регулярное выражение) согласно
.BR regex (7)
и/или
.BR re_format (7),
и
.BR exact ,
тогда будет использовано точное совпадение. Если стилем выражения DN в условии
.B <what>
является regex, становятся доступны подсовпадения согласно
.BR regex (7)
и/или
.BR re_format (7);
при других стилях предоставляются ограниченные подсовпадения, как было рассмотрено выше
при обсуждении формы DN условия
.BR <by> .
.LP
Для статических групп указанный тип атрибута должен иметь синтаксис
.B DistinguishedName
или
.BR NameAndOptionalUID .
Для динамических групп тип атрибута должен быть подтипом от
.BR labeledURI .
В динамических группах будут оцениваться только LDAP URI формы
.B ldap:///<base>??<scope>?<filter>
с поиском только по локальному серверу.
.LP
Выражения
.BR peername=<peername> ,
.BR sockname=<sockname> ,
.B domain=<domain>
и
.BR sockurl=<sockurl>
означают, что при принятии решения о предоставлении доступа шаблон
.B pattern
сравнивается с IP-адресом хоста, с которого происходит подключение, (в форме
.BR "IP=<ip>:<port>"
для IPv4 или
.BR "IP=[<ipv6>]:<port>"
для IPv6), либо с именем файла именованного канала при подключении через именованный канал (в форме
.BR "PATH=<path>" )
для
.BR peername ;
с именем файла именованного канала для
.BR sockname ;
с именем хоста, с которого происходит подключение, для
.BR domain ;
и с используемым при подключении URL для
.BR sockurl .
При сравнении с шаблоном применяются те же правила
.BR style ,
которые были описаны для варианта
.BR group ,
плюс стиль
.BR regex ,
подразумевающий подстановку подсовпадений
.B expand
и сравнение соответствующих параметров подключения с регулярным выражением.
Стиль
.B exact
условия
.B <peername>
(по умолчанию) подразумевает точное совпадение с клиентским
.BR IP ,
включая префикс
.B "IP="
и окончание
.BR ":<port>" ,
либо с именем файла клиентского именованного канала
.BR path ,
включая префикс
.B "PATH="
при подключении через именованный канал.
При использовании специального стиля
.B ip
шаблон интерпретируется как
.BR <peername>=<ip>[%<mask>][{<n>}] ,
где
.B <ip>
и
.BR <mask> \ \-
точечно-цифровое представление IP-адреса и маски подсети, а
.BR <n> ,
заключённое в фигурные скобки, - опциональное указание номера порта.
То же касается и адресов IPv6 при использовании специального стиля
.BR ipv6 .
При проверке привилегий доступа, извлекается IP-составляющая выражения
.BR peername ,
отбрасываются префикс
.B "IP="
и часть
.BR ":<port>" ,
и полученное сравнивается с частью
.B <ip>
шаблона после применения маски
.BR <mask> :
\fI((peername & <mask>) == <ip>)\fP.
Например,
.B peername.ip=127.0.0.1
и
.B peername.ipv6=::1
позволяют устанавливать соединение только с локального хоста,
.B peername.ip=192.168.1.0%255.255.255.0
позволяет устанавливать соединение с любого IP-адреса сети класса C 192.168.1, а
.B peername.ip=192.168.1.16%255.255.255.240{9009}
позволяет устанавливать соединение с любого IP-адреса в диапазоне 192.168.1.[16-31]
той же сети и только при использовании порта 9009.
В случае соединения через именованный канал, при использовании специального стиля
.B path
из
.B peername
отбрасывается префикс
.B "PATH="
и полученное значение сравнивается на точное совпадение с заданным шаблоном.
В условии
.B <domain>
также разрешён стиль
.BR subtree ,
в этом случае доступ предоставляется при точном совпадении полностью квалифицированного имени с шаблоном
.BR domain ,
либо при точном совпадении конечной части этого имени (после
.BR точки )
с шаблоном
.BR domain .
Разрешено использование стиля
.BR expand ,
при котором подразумевается точное совпадение как в стиле
.B exact
с возможностью подстановки подсовпадений; в данном случае более правильным решением считается использование
.B expand
в качестве модификатора стиля.
Для примера,
.B domain.subtree=example.com
будет совпадать с www.example.com, но не с www.anotherexample.com.
Доменное имя
.B domain
хоста, с которого происходит подключение, определяется путём выполнения обратного поиска DNS.
Поскольку результаты данного вида поиска довольно легко подменить, использование выражения
.B domain
настоятельно не рекомендуется. По умолчанию, обратный поиск отключен.
В необязательном квалификаторе
.B domainstyle
условия
.B <domain>
разрешено использовать опциональный модификатор
.BR modifier ;
единственное на сегодняшний день поддерживаемое значение модификатора -
.BR expand ,
указание которого приводит к тому, что замена подстрок подсовпадениями происходит, даже если
.B domainstyle
не является
.BR regex ,
аналогично тому, как это происходит в условии
.BR <dn> .
.LP
Применение выражения
.B set=<pattern>
пока недокументировано.
.LP
Выражение
.B dynacl/<name>[/<options>][.<dynstyle>][=<pattern>]
означает, что проверка доступа возлагается на определённый администратором метод, указываемый в поле
.BR <name> ,
который может быть зарегистрирован во время выполнения с помощью директивы
.BR moduleload .
Поля
.BR <options> ,
.B <dynstyle>
и
.B <pattern>
являются опциональными и непосредственно передаются зарегистрированной процедуре разбора.
Динамические ACL dynacl являются экспериментальными; они должны быть явно включены во время компиляции.
.LP
Выражение
.B dynacl/aci[=<attrname>]
означает, что контроль доступа определяется значениями атрибутов
.B attrname
самой записи.
Необязательный параметр
.B <attrname>
указывает, в атрибутах какого типа содержится ACI-информация в записи.
По умолчанию используется операционный атрибут
.BR ReOpenLDAPaci .
ACIs являются экспериментальными; они должны быть явно включены во время компиляции.
.LP
Выражения
.BR ssf=<n> ,
.BR transport_ssf=<n> ,
.B tls_ssf=<n>
и
.BR sasl_ssf=<n>
задают минимально необходимый фактор силы безопасности (Security Strength Factor, ssf),
требуемый для предоставления доступа. Значением должно быть положительное целое число.
.SH ПОЛЕ <ACCESS>
Необязательное поле
.B <access> ::= [[real]self]{<level>|<priv>}
определяет уровень доступа или специфические привилегии доступа, предоставляемые тому, кто указан в поле
.BR who .
Компоненты поля
.B <access>
определяются следующим образом:
.LP
.nf
	<level> ::= none|disclose|auth|compare|search|read|{write|add|delete}|manage
	<priv> ::= {=|+|\-}{0|d|x|c|s|r|{w|a|z}|m}+
.fi
.LP
Модификатор
.B self
позволяет специальные операции, вроде получения некоторого уровня доступа или привилегии,
только в случае, когда в этой операции участвует имя пользователя, запрашивающего доступ.
Подразумевается, что пользователь, запрашивающий доступ, прошёл авторизацию.
Модификатор
.B realself
указывает на аутентификационное DN, в отличие от авторизационного DN модификатора
.BR self .
В качестве примера можно привести уровень доступа
.B selfwrite
к атрибуту членства в группе, позволяющий кому-либо добавлять/удалять своё собственное DN
в списке членов группы, но не дающий права воздействовать на других членов.
.LP
Модель доступа
.B level
основывается на инкрементной интерпретации привилегий доступа. Возможные уровни:
.BR none ,
.BR disclose ,
.BR auth ,
.BR compare ,
.BR search ,
.BR read ,
.B write
и
.BR manage .
Каждый уровень доступа подразумевает права всех предыдущих, а на уровне
.B manage
предоставляется полный доступ, в том числе административный. Уровень
.BR write
на самом деле представляет собой комбинацию уровней
.BR add
и
.BR delete ,
которые, соответственно, ограничивают привилегии записи до добавления и удаления
объектов, указанных в поле
.BR <what> .

.LP
Уровень доступа
.B none
запрещает любой доступ, в том числе вывод информации об ошибках при возникновении таковых.
.LP
Уровень доступа
.B disclose
позволяет выводить информацию об ошибках при возникновении таковых.
.LP
Уровень доступа
.B auth
означает, что запрашивающему разрешается доступ к отдельному атрибуту
для выполнения операций аутентификации/авторизации (например,
.BR bind ),
остальной доступ запрещается. Это полезно для предоставления неаутентифицированным
клиентам минимально возможного уровня доступа к критическим ресурсам, таким как пароли.
.LP
Модель доступа
.B priv
основывается на явном задании привилегий доступа для каждого условия.
Знак
.B =
сбрасывает заданные ранее привилегии доступа; следовательно,
итоговые привилегии соответствуют тем, которые заданы только в этом условии.
Знаки
.B +
и
.B \-
добавляют/удаляют привилегии доступа к уже существующим.
Привилегии могут быть:
.B m
для manage (управление),
.B w
для write (запись),
.B a
для add (добавление),
.B z
для delete (удаление),
.B r
для read (чтение),
.B s
для search (поиск),
.B c
для compare (сравнение),
.B x
для authentication (аутентификация) и
.B d
для disclose (вывод информации об ошибках).
В одном выражении можно указывать несколько из этих привилегий.
.B 0
указывает, что никаких привилегий не предоставляется.
Это значение может быть использовано только само по себе (например, +0).
Имейте ввиду, что
.BR +az \ \-
это эквивалент
.BR +w .
.LP
Если никакого уровня или привилегий доступа не указано, значение по умолчанию -
.BR +0 .
.SH ПОЛЕ <CONTROL>
Необязательное поле
.B <control>
управляет ходом применения правил доступа. Оно может принимать формы:
.LP
.nf
	stop
	continue
	break
.fi
.LP
где
.B stop
(значение по умолчанию), означает, что в случае нахождения совпадения контроль доступа завершается.
Две других формы используются для продолжения обработки условий доступа. Форма
.B continue
позволяет перейти к рассмотрению других условий
.B <who>
в том же условии
.BR <access> ,
в результате чего может иметь место инкрементное изменение привилегий. Форма
.B break
позволяет перейти к обработке других условий
.BR <access> ,
совпадающих с аналогичными целевыми объектами.
Рассмотрим пример (глупый):
.LP
.nf
	access to dn.subtree="dc=example,dc=com" attrs=cn
		by * =cs break

	access to dn.subtree="ou=People,dc=example,dc=com"
		by * +r
.fi
.LP
В этом примере всем даются привилегии на поиск и сравнение в пределах дерева
"dc=example,dc=com", а во втором правиле также разрешается чтение в пределах поддерева
"ou=People". Второй (ещё более глупый) пример:
.LP
.nf
	access to dn.subtree="dc=example,dc=com" attrs=cn
		by * =cs continue
		by users +r
.fi
.LP
В этом примере  всем даются привилегии на поиск и сравнение, а пользователям,
прошедшим проверку подлинности, дополнительно предоставляются привилегии на чтение.
.LP
Одним из полезных применений может быть простое предоставление привилегий на запись пользователю
.BR updatedn ,
отличному от
.BR rootdn .
В этом случае, поскольку
.B updatedn
требуется доступ на запись ко всем (или почти всем) данным,
в качестве первого правила доступа можно использовать
.LP
.nf
	access to *
		by dn.exact="cn=The Update DN,dc=example,dc=com" write
		by * break
.fi
.LP
Как следствие, если операция выполняется не от имени
.BR updatedn ,
контроль доступа сразу переходит к рассмотрению последующих правил.

.SH ТРЕБОВАНИЯ ОПЕРАЦИЙ
Операциям требуются различные привилегии доступа к различным частям
и совокупностям записей. Приводимое ниже краткое изложение применимо к
базам данных первичных механизмов манипуляции данными, таких как BDB и HDB.
Требования баз данных других механизмов могут отличаться (и часто отличаются).

.LP
Операция
.B add
требует привилегий
.B add (=a)
на псевдоатрибут
.B entry
добавляемой записи и привилегий
.B add (=a)
на псевдоатрибут
.B children
родительской по отношению к ней записи.
При добавлении записи-суффикса базы данных требуется доступ
.B add
на псевдоатрибут
.B children
пустого DN (""). Также, если на уровне базы данных была настроена проверка
ACL добавления контента (смотрите man-страницы
.BR slapd.conf (5)
или
.BR slapd\-config (5)),
на все добавляемые атрибуты требуются привилегии
.BR add (=a) .

.LP
Операция
.BR bind ,
при хранении данных аутентификации в каталоге, требует привилегий
.B auth (=x)
на атрибут, в котором хранятся эти данные (обычно
.BR userPassword ).

.LP
Операция
.B compare
требует привилегий
.B compare (=c)
на атрибут, который будет сравниваться.

.LP
Операция
.B delete
требует привилегий
.B delete (=z)
на псевдоатрибут
.B entry
удаляемой записи, и привилегий
.B delete (=z)
на псевдоатрибут
.B children
родительской по отношению к ней записи.

.LP
Операция
.B modify
требует привилегий
.B write (=w)
на модифицируемый атрибут.
Точнее, для добавления новых значений требуются привилегии
.BR add (=a) ,
для удаления существующих значений требуются привилегии
.BR delete (=z) ,
а для замены существующих значений требуются одновременно привилегии
.B delete
и
.BR "add (=az)" ,
либо
.BR "write (=w)" .

.LP
Операция
.B modrdn
требует привилегий
.B write (=w)
на псевдоатрибут
.B entry
той записи, у которой модифицируется относительный DN, привилегий
.B delete (=z)
на псевдоатрибут
.B children
старой родительской по отношению к ней записи, привилегий
.B add (=a)
на псевдоатрибут
.B children
новой родительской по отношению к ней записи, и привилегий
.B add (=a)
на атрибуты, присутствующие в новом относительном DN.
Если
.B deleteoldrdn
установлен в 1, то также требуются привилегии
.B delete (=z)
на атрибуты, присутствующие в старом относительном DN.

.LP
Операция
.B search
требует привилегий
.B search (=s)
на псевдоатрибут
.B entry
записи-основы поиска searchBase (ПРИМЕЧАНИЕ: это было введено в OpenLDAP версии 2.4).
Далее, для каждой записи требуются привилегии
.B search (=s)
на атрибуты, которые указаны в поисковом фильтре.
Наконец, записи, отобранные в результате поиска, проверяются на наличие привилегий
.B read (=r)
на псевдоатрибут
.B entry
(для доступа на чтение к самой записи)
и доступа
.B read (=r)
к каждому значению каждого запрашиваемого атрибута.
Кроме того, для каждого объекта
.BR referral ,
используемого при генерации отсылок-продолжений, операция поиска требует доступа
.B read (=r)
на псевдоатрибут
.B entry
(для доступа на чтение к самому объекту referral),
а также доступа
.B read (=r)
к атрибуту, в котором содержится информация об отсылке
(обычно атрибут
.BR ref ).

.LP
Некоторые внутренние операции и некоторые элементы управления
.B controls
требуют специфических привилегий доступа.
Отображение
.B authzID
и элемент управления
.B proxyAuthz
требуют привилегий
.B auth (=x)
на все атрибуты, присутствующие в поисковом фильтре URI карт регулярных выражений (правая часть директив
.BR authz-regexp ).
Также требуются привилегии
.B auth (=x)
на атрибут
.B authzTo
авторизационной идентификационной сущности и/или атрибут
.B authzFrom
авторизованной идентификационной сущности. Вообще, при выполнении внутреннего поиска
в целях аутентификации или авторизации, специфичные для поиска привилегии
(смотрите приведённые выше требования доступа для операции search) ослабляются до
.BR auth .

.LP
Контроль доступа к записям в процессе поиска проверяется интерфейсом приёма запросов frontend,
поэтому полностью соблюдается всеми механизмами манипуляции данными; для всех остальных операций
и для фазы обнаружения записей операции поиска search полные семантики ACL поддерживаются
только первичными механизмами манипуляции данными, то есть
.BR back\-mdb (5),
.BR back\-hdb (5)
и
.BR back\-bdb (5).

Некоторые другие механизмы манипуляции данными, такие как
.BR back\-sql (5),
могут полностью поддерживать описанные семантики; другие могут поддерживать только часть из них,
или даже вести себя иначе в некоторых аспектах. Подробнее об этом можно узнать в
man-страницах, специфичных для конкретного механизма манипуляции данными.

.SH ПРЕДОСТЕРЕЖЕНИЯ
Настоятельно рекомендуется явно использовать наиболее подходящий стиль
.B <dnstyle>
в условиях
.B <what>
и
.B <who>
во избежание возможных неверных спецификаций правил доступа, а также в целях улучшения производительности
(не следует без необходимости использовать поиск соответствия с регулярным выражением regex,
когда достаточно определения точного совпадения exact).
.LP
Администратор может создать правило
.LP
.nf
	access to dn.regex="dc=example,dc=com"
		by ...
.fi
.LP
ожидая, что оно будет соответствовать всем записям в поддереве "dc=example,dc=com".
Однако, на самом деле это правило соответствует любому DN,
содержащему где бы то ни было подстроку "dc=example,dc=com". То есть, данное правило верно и для
"uid=joe,dc=example,dc=com", и для "dc=example,dc=com,uid=joe".
.LP
Чтобы соответствовать желаемому поддереву, это правило должно быть составлено более точно:
.LP
.nf
	access to dn.regex="^(.+,)?dc=example,dc=com$"
		by ...
.fi
.LP
По соображениям производительности лучше будет использовать стиль subtree:
.LP
.nf
	access to dn.subtree="dc=example,dc=com"
		by ...
.fi
.LP
При составлении правил с подсовпадениями более правильно будет не использовать без необходимости
.B <dnstyle>
.BR regex .
Например, чтобы разрешить доступ к поддереву пользователя, совпадение с которым
определяется в условии
.BR <what> ,
этому же пользователю, можно составить правило:
.LP
.nf
	access to dn.regex="^(.+,)?uid=([^,]+),dc=example,dc=com$"
		by dn.regex="^uid=$2,dc=example,dc=com$$" write
		by ...
.fi
.LP
Однако, поскольку в условии
.B <by>
требуется всего лишь подстановка подстроки, более эффективным решением будет:
.LP
.nf
	access to dn.regex="^(.+,)?uid=([^,]+),dc=example,dc=com$"
		by dn.exact,expand="uid=$2,dc=example,dc=com" write
		by ...
.fi
.LP
По сути, если
.B <dnstyle> regex
подразумевает подстановку подстрок, то
.B exact
(и другие связанные с DN значения
.BR <dnstyle> )
- нет, поэтому подстановка должна быть запрошена явно.
.LP
.SH ФАЙЛЫ
.TP
@SYSCONFDIR@/slapd.conf
конфигурационный файл slapd по умолчанию
.SH "СМОТРИТЕ ТАКЖЕ"
.BR slapd (8),
.BR slapd\-* (5),
.BR slapacl (8),
.BR regex (7),
.BR re_format (7)
.LP
"Руководство администратора OpenLDAP" (http://www.OpenLDAP.org/doc/admin/, https://pro-ldap.ru/tr/admin24/).
.SH "ПРИЗНАНИЕ ЗАСЛУГ"
.so ../Project
