.\" $ReOpenLDAP$
.\" Copyright 1992-2018 ReOpenLDAP AUTHORS: please see AUTHORS file.
.\" All rights reserved.
.\"
.\" This file is part of ReOpenLDAP.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted only as authorized by the OpenLDAP
.\" Public License.
.\"
.\" A copy of this license is available in the file LICENSE in the
.\" top-level directory of the distribution or, alternatively, at
.\" <http://www.OpenLDAP.org/license.html>.

.TH SLAPD-SOCK 5 "@RELEASE_DATE@" "ReOpenLDAP @VERSION@"

.SH НАЗВАНИЕ
slapd\-sock \- механизм манипуляции данными и наложение для slapd сокет

.SH ОБЗОР
@SYSCONFDIR@/slapd.conf

.SH ОПИСАНИЕ
Механизм манипуляции данными для
.BR slapd (8)
сокет использует внешнюю программу для обработки запросов, по аналогии с
.BR slapd\-shell (5).
Однако в данном случае внешняя программа ожидает соединения на сокете домена UNIX. Это дает возможность
иметь пул процессов, которые сохраняются от запроса к запросу, что позволяет осуществлять многопоточность
и обеспечивать более высокий уровень эффективности. Внешняя программа должна быть запущена отдельно,
.BR slapd (8)
не заботится об её запуске.

Этот модуль также может использоваться как наложение поверх некоторой другой базы данных. Использование
в качестве наложения позволяет инициировать внешние действия в ответ на операции с основной базой данных.
.SH КОНФИГУРАЦИЯ
Приведённые ниже директивы
.B slapd.conf
применяются к базам данных механизма манипуляции данными SOCK. То есть, они должны следовать за строкой
"database sock" и находиться до последующих строк "backend" или "database". Другие относящиеся к базам
данных директивы описаны в man-странице
.BR slapd.conf (5).

Для использования этого модуля в качестве наложения, данные директивы должны следовать за строкой
"overlay sock" в существующем определении базы данных.
.TP
.B extensions      [ binddn | peername | ssf | connid ]*
Включает отправку дополнительных мета-атрибутов с каждым запросом.
.nf
binddn: <DN, от имени которого выполнено подсоединение>
peername: IP=<адрес>:<порт>
ssf: <значение SSF>
connid: <идентификатор соединения>
.fi
.TP
.B socketpath      <путь_к_сокету>
Задаёт путь к сокету домена Unix, в который будут отправляться команды и из которого будут
приниматься ответы.

При использовании в качестве наложения определены следующие дополнительные директивы:
.TP
.B sockops	[ bind | unbind | search | compare | modify | modrdn | add | delete ]*
Определяет, какие типы запросов отправлять во внешнюю программу.
По умолчанию список пуст (никаких запросов не отправляется).
.TP
.B sockresps       [ result | search ]*
Определяет, какие типы ответов отправлять во внешнюю программу. В варианте "result" отправляются только
результаты операций. В варианте "search" отправляются все записи, которые вернула база данных в ответ
на запрос search. По умолчанию список пуст (никаких ответов не отправляется).

.SH ПРОТОКОЛ
Протокол, по существу, тот же, что и у механизма
.BR slapd\-shell (5),
с добавлением новой строки, свидетельствующей о завершении параметров команды.
Могут быть отправлены следующие команды:
.RS
.nf
ADD
msgid: <идентификатор сообщения>
<повторение { "suffix:" <DN суффикса базы данных> }>
<запись в формате LDIF>
<пустая строка>
.fi
.RE
.PP
.RS
.nf
BIND
msgid: <идентификатор сообщения>
<повторение { "suffix:" <DN суффикса базы данных> }>
dn: <DN>
method: <номер метода>
credlen: <длина <учётных данных>>
cred: <учётные данные>
<пустая строка>
.fi
.RE
.PP
.RS
.nf
COMPARE
msgid: <идентификатор сообщения>
<повторение { "suffix:" <DN суффикса базы данных> }>
dn: <DN>
<атрибут>: <значение>
<пустая строка>
.fi
.RE
.PP
.RS
.nf
DELETE
msgid: <идентификатор сообщения>
<повторение { "suffix:" <DN суффикса базы данных> }>
dn: <DN>
<пустая строка>
.fi
.RE
.PP
.RS
.nf
MODIFY
msgid: <идентификатор сообщения>
<повторение { "suffix:" <DN суффикса базы данных> }>
dn: <DN>
<повторение {
    <"add"/"delete"/"replace">: <атрибут>
    <повторение { <атрибут>: <значение> }>
    \-
}>
<пустая строка>
.fi
.RE
.PP
.RS
.nf
MODRDN
msgid: <идентификатор сообщения>
<повторение { "suffix:" <DN суффикса базы данных> }>
dn: <DN>
newrdn: <новое RDN>
deleteoldrdn: <0 или 1>
<если указана новая вышестоящая запись: "newSuperior: <DN>">
<пустая строка>
.fi
.RE
.PP
.RS
.nf
SEARCH
msgid: <идентификатор сообщения>
<повторение { "suffix:" <DN суффикса базы данных> }>
base: <базовое DN>
scope: <0-2, смотрите ldap.h>
deref: <0-3, смотрите ldap.h>
sizelimit: <ограничение по размеру>
timelimit: <ограничение по времени>
filter: <фильтр>
attrsonly: <0 или 1>
attrs: <"all" или разделённый пробелами список атрибутов>
<пустая строка>
.fi
.RE
.PP
.RS
.nf
UNBIND
msgid: <идентификатор сообщения>
<повторение { "suffix:" <DN суффикса базы данных> }>
<пустая строка>
.fi
.RE
.LP
Все эти команды, - за исключением \fBunbind\fP, - должны выдавать:
.RS
.nf
RESULT
code: <целое число>
matched: <совпавшее DN>
info: <текст>
.fi
.RE
(обязательна только строка RESULT), и затем закрыть сокет.
В ответе команды \fBsearch\fP перед строкой RESULT должны следовать записи в формате LDIF, за каждой
из которых добавляется пустая строка. Строки, начинающиеся с `#' или `DEBUG:' игнорируются.

При использовании в качестве наложения внешняя программа должна вернуть ответ CONTINUE, если обработка
запроса должна продолжиться нормальным способом; либо вернуть обычный ответ RESULT, если внешняя
программа хочет обойти обработку результатов механизмом манипуляции данных той базы данных,
к которой применяется наложение.

Если наложение настроено на отправку ответных сообщений во внешнюю программу, такие сообщения будут
представлены как расширенное сообщение RESULT или сообщение ENTRY, определённые ниже. Сообщение RESULT
аналогично приведённому ранее, но включает также поле msgid и любые сконфигурированные расширения
(смотрите директиву extensions):
.RS
.nf
RESULT
msgid: <идентификатор сообщения>
code: <целое число>
matched: <совпавшее DN>
info: <текст>
<пустая строка>
.fi
.RE

Как правило, для сопоставления сообщения результата с запросом требуется как поле msgid,
так и поле connid. Сообщение ENTRY имеет форму:
.RS
.nf
ENTRY
msgid: <идентификатор сообщения>
<запись в формате LDIF>
<пустая строка>
.fi
.RE

.SH КОНТРОЛЬ ДОСТУПА
Механизм манипуляции данными
.B sock
не соблюдает все семантики ACL, описанные в man-странице
.BR slapd.access (5).
В общем случае, доступ к объектам проверяется с использованием фиктивного объекта, который содержит
только DN, поэтому правила доступа, основанные на анализе содержимого объекта, не выполняются.
В частности:
.LP
Для операции
.B add
не требуется иметь доступ
.B write (=w)
к псевдо-атрибуту
.B children
родительской записи.
.LP
Для операции
.B bind
требуется доступ
.B auth (=x)
к псевдо-атрибуту
.B entry
той записи, идентификационная сущность которой оценивается; доступ
.B auth (=x)
к удостоверяющим данным не проверяется, а делегируется программе, обрабатывающей запросы.
.LP
Для операции
.B compare
требуется доступ
.B compare (=c)
к псевдо-атрибуту
.B entry
того объекта, в котором находится значение, подвергающееся сравнению; доступ
.B compare (=c)
к атрибуту, значение которого подвергается сравнению, не проверяется.
.LP
Для операции
.B delete
не требуется иметь доступ
.B write (=w)
к псевдо-атрибуту
.B children
родительской записи.
.LP
Для операции
.B modify
требуется доступ
.B write (=w)
к псевдо-атрибуту
.BR entry ;
доступ
.B write (=w)
к конкретным атрибутам, которые подвергаются модификации, не проверяется.
.LP
Для операции
.B modrdn
не требуется иметь доступ
.B write (=w)
к псевдо-атрибутам
.B children
как текущей, так и новой родительской записи, если они различны; доступ
.B write (=w)
к отличительным значениям атрибутов именования не проверяется.
.LP
Для операции
.B search
не требуется иметь доступ
.B search (=s)
к псевдо-атрибуту
.B entry
базовой записи поиска; доступ
.B search (=s)
к атрибутам и значениям, используемым в поисковых фильтрах, не проверяется.

.SH ПРИМЕР
Пример скрипта находится в директории slapd/back\-sock/ дерева исходных кодов ReOpenLDAP.
.SH ФАЙЛЫ
.TP
@SYSCONFDIR@/slapd.conf
конфигурационный файл slapd по умолчанию.
.SH СМОТРИТЕ ТАКЖЕ
.BR slapd.conf (5),
.BR slapd\-config (5),
.BR slapd (8).
.SH АВТОР
Brian Candler, с улучшениями от Howard Chu
