#!/bin/bash
## $ReOpenLDAP$
## Copyright 1998-2018 ReOpenLDAP AUTHORS: please see AUTHORS file.
## All rights reserved.
##
## This file is part of ReOpenLDAP.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

echo "running defines.sh"
. ${TOP_SRCDIR}/tests/scripts/defines.sh

mkdir -p $TESTDIR $DBDIR1

echo "Starting slapd on TCP/IP port $PORT1..."
config_filter $BACKEND ${AC_conf[monitor]} < $SCHEMACONF > $CONF1
$SLAPD -f $CONF1 -h $URI1 $TIMING > $LOG1 2>&1 &
PID=$!
if test $WAIT != 0 ; then
    echo PID $PID
    read foo
fi
KILLPIDS="$PID"
check_running 1

echo "Using ldapsearch to retrieve the root DSE..."
$LDAPSEARCH -b "" -s base -h $LOCALHOST -p $PORT1 \
	'@extensibleObject' > $SEARCHOUT 2>&1
RC=$?

if test $RC = 0 ; then
	echo "Using ldapsearch to retrieve the cn=Subschema..."
	$LDAPSEARCH -b "cn=Subschema" -s base -h $LOCALHOST -p $PORT1 \
		'(&(objectClasses=top)(objectClasses=2.5.6.0))' cn objectClass \
		>> $SEARCHOUT  2>&1
	RC=$?

fi

count=2
if test $RC = 0 ; then
	case ${AC_conf[monitor]} in yes | mod)
		count=3
		echo "Using ldapsearch to retrieve the cn=Monitor..."
		$LDAPSEARCH -b "cn=Monitor" -s base -h $LOCALHOST -p $PORT1 \
			'@monitor' >> $SEARCHOUT 2>&1
		RC=$?
		;;
	esac
fi

killservers

cat $SEARCHOUT


if test $RC != 0 ; then
	echo ">>>>> Test failed"
else
	RC=`grep '^dn:' $SEARCHOUT | wc -l`
	if test $RC != $count ; then
		echo ">>>>> Test failed: expected $count entries, got" $RC
		RC=1
	else
		echo ">>>>> Test succeeded"
		RC=0
	fi
fi

exit $RC
