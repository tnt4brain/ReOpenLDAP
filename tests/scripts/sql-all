#!/bin/bash
## $ReOpenLDAP$
## Copyright 1998-2018 ReOpenLDAP AUTHORS: please see AUTHORS file.
## All rights reserved.
##
## This file is part of ReOpenLDAP.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

. ${TOP_SRCDIR}/tests/scripts/defines.sh

SLEEPTIME=10

teamcity_msg "testSuiteStarted name='all LDAP tests for $BACKEND'"

echo "#######################################################################"
echo "###                                                                 ###"
echo "### SQL tests                                                       ###"
echo "###                                                                 ###"
echo "#######################################################################"
echo "###"
echo "### SQL tests require the sql backend, a properly configured"
echo "### ODBC and a database populated with data from the applicable"
echo "### servers/slapd/back-sql/rdbms_depend/* files."
echo "###"
echo "### Set SLAPD_USE_SQL to the desired RDBMS to enable this test;"
echo "###"
echo "### Currently supported RDBMSes are:"
echo "###         ibmdb2, mysql, pgsql"
echo "###"
echo "### Set SLAPD_USE_SQLWRITE=yes to enable the write tests"
echo "###"
echo "### See servers/slapd/back-sql/rdbms_depend/README for more "
echo "### details on how to set up the RDBMS and the ODBC"
echo "###"

echo ">>>>> Executing all LDAP tests for $BACKEND"

for CMD in ${TOP_SRCDIR}/tests/scripts/sql-test*; do
	# remove cruft from prior test
	if test $PRESERVE = yes ; then
		/bin/rm -rf testrun/db.*
	else
		/bin/rm -rf testrun
	fi

	teamcity_msg "testStarted name='`basename $CMD` for $BACKEND' captureStandardOutput='true'"
	echo ">>>>> Starting ${TB}`basename $CMD`${TN} ..."
	$CMD
	RC=$?
	if test $RC -eq 0 ; then
		echo ">>>>> $CMD completed ${TB}OK${TN}."
	else
		echo ">>>>> $CMD ${TB}failed${TN} (exit $RC)"
		teamcity_msg "testFailed name='`basename $CMD`'"
		exit $RC
	fi

	echo ">>>>> waiting $SLEEPTIME seconds for things to exit"
	sleep $SLEEPTIME
	echo ""
	teamcity_msg "testFinished name='`basename $CMD`'"
done

teamcity_msg "testSuiteFinished name='all LDAP tests for $BACKEND'"
