#!/bin/bash
## $ReOpenLDAP$
## Copyright 1998-2018 ReOpenLDAP AUTHORS: please see AUTHORS file.
## All rights reserved.
##
## This file is part of ReOpenLDAP.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

echo "running defines.sh"
. ${TOP_SRCDIR}/tests/scripts/defines.sh

mkdir -p $TESTDIR $DBDIR1

echo "Running slapadd to build slapd database..."
config_filter $BACKEND ${AC_conf[monitor]} < $CONF > $ADDCONF
$SLAPADD -f $ADDCONF -l $LDIFORDERED
RC=$?
if test $RC != 0 ; then
	echo "slapadd failed ($RC)!"
	exit $RC
fi

echo "Starting slapd on TCP/IP port $PORT1..."
config_filter $BACKEND ${AC_conf[monitor]} < $CONF > $CONF1
$SLAPD -f $CONF1 -h $URI1 $TIMING > $LOG1 2>&1 &
PID=$!
if test $WAIT != 0 ; then
    echo PID $PID
    read foo
fi
KILLPIDS="$PID"
check_running 1

echo "Using ldapsearch to retrieve all the entries..."
$LDAPSEARCH -S "" -b "$BASEDN" -h $LOCALHOST -p $PORT1 > $SEARCHOUT 2>&1
RC=$?
if test $RC != 0 ; then
	echo "ldapsearch failed ($RC)!"
	killservers
	exit $RC
fi

echo "Filtering ldapsearch results..."
$LDIFFILTER < $SEARCHOUT > $SEARCHFLT
echo "Filtering original ldif used to create database..."
$LDIFFILTER < $LDIF > $LDIFFLT
echo "Comparing filter output..."
$CMP $SEARCHFLT $LDIFFLT > $CMPOUT

if test $? != 0 ; then
	echo "comparison failed - database was not created correctly"
	echo $SEARCHFLT $LDIFFLT
	$DIFF $SEARCHFLT $LDIFFLT
	killservers
	exit 1
fi

if test $BACKEND = ldif ; then
	echo "Skipping test of unordered slapadd (unsupported in ldif backend)"
else

killservers
rm -f $DBDIR1/*

BASE2="ou=test,dc=example,dc=com"
sed -e "s;$BASEDN;$BASE2;" $ADDCONF > ${ADDCONF}2
mv ${ADDCONF}2 $ADDCONF
sed -e "s;$BASEDN;$BASE2;" $CONF1 > ${CONF1}2
mv ${CONF1}2 $CONF1
echo "Running slapadd with unordered LDIF..."
$SLAPADD -f $ADDCONF -l $LDIFUNORDERED
RC=$?
if test $RC != 0 ; then
	echo "slapadd failed ($RC)!"
	exit $RC
fi

echo "Starting slapd on TCP/IP port $PORT1..."
$SLAPD -f $CONF1 -h $URI1 $TIMING > $LOG1 2>&1 &
PID=$!
if test $WAIT != 0 ; then
    echo PID $PID
    read foo
fi
KILLPIDS="$PID"

echo "Using ldapsearch to retrieve all the entries..."
for i in $SLEEP0 0.5 1 2 3 4 5 5; do
	echo "Waiting $i seconds for slapd to start..."
	sleep $i
	$LDAPSEARCH -b "$BASE2" -h $LOCALHOST -p $PORT1 > $SEARCHOUT 2>&1
	RC=$?
	if test $RC = 0 ; then
		break
	fi
done

if test $RC != 0 ; then
	echo "ldapsearch failed! ($RC, $(date --rfc-3339=ns))"
	killservers
	exit $RC
fi

echo "Filtering ldapsearch results..."
$LDIFFILTER < $SEARCHOUT > $SEARCHFLT
echo "Filtering original ldif used to create database..."
$LDIFFILTER < $LDIFREORDERED > $LDIFFLT
echo "Comparing filter output..."
$CMP $SEARCHFLT $LDIFFLT > $CMPOUT

if test $? != 0 ; then
	echo "comparison failed - database was not created correctly"
	echo $SEARCHFLT $LDIFFLT
	$DIFF $SEARCHFLT $LDIFFLT
	killservers
	exit 1
fi

fi

killservers
echo ">>>>> Test succeeded"
exit 0
