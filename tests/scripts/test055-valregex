#!/bin/bash
## $ReOpenLDAP$
## Copyright 1998-2018 ReOpenLDAP AUTHORS: please see AUTHORS file.
## All rights reserved.
##
## This file is part of ReOpenLDAP.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

echo "running defines.sh"
. ${TOP_SRCDIR}/tests/scripts/defines.sh
LVL=acl

mkdir -p $TESTDIR $DBDIR1

echo "Running slapadd to build slapd database..."
config_filter $BACKEND ${AC_conf[monitor]} < $VALREGEXCONF > $CONF1
$SLAPADD -f $CONF1 -l $LDIFORDERED
RC=$?
if test $RC != 0 ; then
	echo "slapadd failed ($RC)!"
	exit $RC
fi

echo "Starting slapd on TCP/IP port $PORT1..."
$SLAPD -f $CONF1 -h $URI1 $TIMING > $LOG1 2>&1 &
PID=$!
if test $WAIT != 0 ; then
    echo PID $PID
    read foo
fi
KILLPIDS="$PID"
check_running 1

cat /dev/null > $SEARCHOUT

echo "# Try an attribute vale regex that match, but substitute does not"
echo "# this should fail"
$LDAPMODIFY -D "$JAJDN" -h $LOCALHOST -p $PORT1 -w jaj >> \
	$TESTOUT 2>&1 << EOMODS
dn: cn=Bjorn Jensen,ou=Information Technology Division,ou=People,dc=example,dc=com
changetype: modify
replace: sn
sn: foobarbuz
EOMODS
RC=$?
case $RC in
50)
	echo "ldapmodify failed as expected"
	;;
0)
	if test $BACKEND != null ; then
		echo "ldapmodify should have failed ($RC)!"
		killservers
		exit 2
	fi
	;;
*)
	echo "ldapmodify failed ($RC)!"
	killservers
	exit $RC
	;;
esac

echo "# Try an attribute vale regex that match and substitute does"
echo "# this should succeed"
$LDAPMODIFY -D "$JAJDN" -h $LOCALHOST -p $PORT1 -w jaj >> \
	$TESTOUT 2>&1 << EOMODS
dn: cn=Bjorn Jensen,ou=Information Technology Division,ou=People,dc=example,dc=com
changetype: modify
replace: sn
sn: James A Jones 1
EOMODS
RC=$?

killservers

case $RC in
0)
	echo "ldapmodify succeed as expected"
	;;
*)
	echo "ldapmodify failed ($RC)!"
	exit $RC
	;;
esac

echo ">>>>> Test succeeded"
exit 0
