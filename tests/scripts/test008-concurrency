#!/bin/bash
## $ReOpenLDAP$
## Copyright 1998-2018 ReOpenLDAP AUTHORS: please see AUTHORS file.
## All rights reserved.
##
## This file is part of ReOpenLDAP.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

echo "running defines.sh"
. ${TOP_SRCDIR}/tests/scripts/defines.sh

if [ -z "$TESTLOOPS" ]; then
	if [ -n "$CI" ]; then
		TESTLOOPS=12
	else
		TESTLOOPS=50
	fi
fi

mkdir -p $TESTDIR $DBDIR1

echo "Running slapadd to build slapd database..."
DBNOSYNC=yes config_filter $BACKEND ${AC_conf[monitor]} < $CONF > $CONF1
$SLAPADD -f $CONF1 -l $LDIFORDERED -d -1 2> $SLAPADDLOG1
RC=$?
if test $RC != 0 ; then
	echo "slapadd failed ($RC)!"
	exit $RC
fi

echo "Starting slapd on TCP/IP port $PORT1..."
$SLAPD -f $CONF1 -h $URI1 $TIMING |& gzip > $LOG1.gz &
PID=$(jobs -p | tail -1)
if test $WAIT != 0 ; then
    echo PID $PID
    read foo
fi
KILLPIDS="$PID"
check_running 1

# fix test data to include back-monitor, if available
# NOTE: copies do_* files from $DATADIR to $TESTDIR
monitor_data "$DATADIR" "$TESTDIR"

echo "Using tester for concurrent server access..."
time $SLAPDTESTER -P "$PROGDIR" -d "$TESTDIR" -h $LOCALHOST -p $PORT1 -D "$MANAGERDN" -w $PASSWD -l $TESTLOOPS
#$SLAPDTESTER -P "$PROGDIR" -d "$TESTDIR" -h $LOCALHOST -p $PORT1 -D "$MANAGERDN" -w $PASSWD -l $TESTLOOPS
RC=$?

if test $RC != 0 ; then
	echo "slapd-tester failed ($RC)!"
	killservers
	exit $RC
fi

echo "Using ldapsearch to retrieve all the entries..."
$LDAPSEARCH -S "" -b "$BASEDN" -h $LOCALHOST -p $PORT1 \
			'objectClass=*' > $SEARCHOUT 2>&1
RC=$?

killservers

if test $RC != 0 ; then
	echo "ldapsearch failed ($RC)!"
	exit $RC
fi

echo "Filtering ldapsearch results..."
$LDIFFILTER < $SEARCHOUT > $SEARCHFLT
echo "Filtering original ldif used to create database..."
$LDIFFILTER < $LDIF > $LDIFFLT
echo "Comparing filter output..."
$CMP $SEARCHFLT $LDIFFLT > $CMPOUT

if test $? != 0 ; then
	echo "comparison failed - database was not created correctly"
	exit 1
fi

echo ">>>>> Test succeeded"
exit 0
