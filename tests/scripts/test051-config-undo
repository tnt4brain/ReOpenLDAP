#!/bin/bash
## $ReOpenLDAP$
## Copyright 1998-2018 ReOpenLDAP AUTHORS: please see AUTHORS file.
## All rights reserved.
##
## This file is part of ReOpenLDAP.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

echo "running defines.sh"
. ${TOP_SRCDIR}/tests/scripts/defines.sh

mkdir -p $TESTDIR $DBDIR1

$SLAPPASSWD -g -n >$CONFIGPWF
echo "rootpw `$SLAPPASSWD -T $CONFIGPWF`" >$TESTDIR/configpw.conf

echo "Running slapadd to build slapd database..."
config_filter $BACKEND ${AC_conf[monitor]} < $UNDOCONF > $CONF1
$SLAPADD -f $CONF1 <<EOF
dn: o=undo
objectClass: organization
o: undo

EOF
RC=$?
if test $RC != 0 ; then
	echo "slapadd failed ($RC)!"
	exit $RC
fi

echo "Starting slapd on TCP/IP port $PORT1..."
mkdir $TESTDIR/confdir
$SLAPD -f $CONF1 -F $TESTDIR/confdir -h $URI1 $TIMING > $LOG1 2>&1 &
PID=$!
if test $WAIT != 0 ; then
    echo PID $PID
    read foo
fi
KILLPIDS="$PID"
check_running 1

echo Dynamically assaulting the schema
$LDAPMODIFY -D cn=config -h $LOCALHOST -p $PORT1 -y $CONFIGPWF \
    > $TESTOUT 2>&1 <<EOF
dn: cn={0}core,cn=schema,cn=config
changetype: modify
replace: olcObjectClasses
olcObjectClasses: ( rawr )
-
EOF
RC=$?
if test $RC != 80 ; then
	echo "invalid objectclass modify allowed ($RC)"
	killservers
	exit 2
fi

$LDAPMODIFY -D cn=config -h $LOCALHOST -p $PORT1 -y $CONFIGPWF \
    > $TESTOUT 2>&1 <<EOF
dn: cn={0}core,cn=schema,cn=config
changetype: modify
replace: olcAttributeTypes
olcAttributeTypes: ( rawr )
-
EOF
RC=$?
if test $RC != 80 ; then
	echo "invalid attributeType modify allowed ($RC)"
	killservers
	exit 2
fi

echo Surveying the damage
$LDAPMODIFY -D "cn=manager,o=undo" -w secret -h $LOCALHOST -p $PORT1 <<EOF
dn: o=foo,o=undo
changetype: add
objectClass: organization
o: foo

EOF
RC=$?
if test $RC != 0 ; then
    echo "schema destroyed by an unsuccessful operation"
    killservers
    exit 2
fi

killservers
echo ">>>>> Test succeeded"
exit 0
