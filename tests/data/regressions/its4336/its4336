#!/bin/bash
## $ReOpenLDAP$
## Copyright 1998-2018 ReOpenLDAP AUTHORS: please see AUTHORS file.
## All rights reserved.
##
## This file is part of ReOpenLDAP.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

echo "running defines.sh"
. ${TOP_SRCDIR}/tests/scripts/defines.sh

if test ${AC_conf[ldap]} = no ; then
	echo "LDAP backend not available, test skipped"
	exit 0
fi

if test ${AC_conf[retcode]} = no; then
	echo "Retcode overlay not available, test skipped"
	exit 0
fi

if test "$BACKEND" = "ldap"; then
	echo "LDAP backend not valid, test skipped"
	exit 0
fi

mkdir -p $TESTDIR $DBDIR1

ITS=4336
ITSDIR=$DATADIR/regressions/its$ITS

echo "Running slapadd to build slapd database..."
config_filter $BACKEND ${AC_conf[monitor]} < $RETCODECONF > $CONF1
$SLAPADD -f $CONF1 -l $LDIFORDERED
RC=$?
if test $RC != 0 ; then
	echo "slapadd failed ($RC)!"
	exit $RC
fi

echo "Starting slapd on TCP/IP port $PORT1..."
$SLAPD -f $CONF1 -h $URI1 $TIMING > $LOG1 2>&1 &
SERVERPID=$!
if test $WAIT != 0 ; then
    echo SERVERPID $SERVERPID
    read foo
fi
KILLPIDS="$SERVERPID"
check_running 1

echo "Starting chain slapd on TCP/IP port $PORT2..."
config_filter $BACKEND ${AC_conf[monitor]} < $ITSDIR/slapd.conf > $CONF2
$SLAPD -f $CONF2 -h $URI2 $TIMING > $LOG2 2>&1 &
PROXYPID=$!
if test $WAIT != 0 ; then
    echo PROXYPID $PROXYPID
    read foo
fi
KILLPIDS="$KILLPIDS $PROXYPID"
check_running 2

echo "Searching the chain..."
echo "
	Search an entry that causes a successful result to be returned
	with a 2 second delay; since size/time limits were erroneously
	set to 0/0, which internally means 0 instead of unlimited, the
	underlying back-ldap search timed out.
"
$LDAPSEARCH -b "cn=success w/ delay,ou=RetCodes,$BASEDN" -h $LOCALHOST -p $PORT2 \
	'(objectClass=*)' > /dev/null 2>&1
RC=$?
if test $RC != 0 ; then
	echo "ldapsearch failed ($RC)!"
	killservers
	exit $RC
fi

echo "Re-searching the chain..."
$LDAPSEARCH -b "cn=success w/ delay,ou=RetCodes,$BASEDN" -h $LOCALHOST -p $PORT2 \
	'(objectClass=*)' > /dev/null 2>&1
RC=$?
if test $RC != 0 ; then
	echo "ldapsearch failed ($RC)!"
	killservers
	exit $RC
fi

killservers
echo ">>>>> Test succeeded"
exit 0
